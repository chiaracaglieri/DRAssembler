Grammatica

    0 $accept: program $end

    1 program: instruction
    2        | instruction instructions

    3 instructions: instruction
    4             | instruction instructions

    5 instruction: MEMLOC VALUE VALUE
    6            | MEMLOCS VALUE seq
    7            | LOC VALUE
    8            | REGVAL VALUE VALUE
    9            | END
   10            | START VALUE
   11            | ar_instruction exp COMMA exp COMMA REG
   12            | rego_instruction REG
   13            | ls_instruction REG COMMA REG COMMA REG
   14            | cond_instruction exp COMMA exp COMMA label
   15            | label instruction

   16 ls_instruction: LOAD
   17               | STORE

   18 ar_instruction: ADD
   19               | SUB
   20               | MUL

   21 cond_instruction: EQ
   22                 | LT
   23                 | GT

   24 rego_instruction: CLEAR
   25                 | INCR

   26 seq: VALUE
   27    | VALUE seq

   28 label: ID SEMICOLON
   29      | ID

   30 exp: REG
   31    | VALUE


Simboli terminali e regole in cui appaiono

$end (0) 0
error (256)
VALUE (258) 5 6 7 8 10 26 27 31
SEMICOLON (259) 28
COMMA (260) 11 13 14
REG (261) 11 12 13 30
ID (262) 28 29
LOAD (263) 16
STORE (264) 17
ADD (265) 18
SUB (266) 19
MUL (267) 20
EQ (268) 21
GT (269) 23
LT (270) 22
CLEAR (271) 24
INCR (272) 25
MEMLOC (273) 5
MEMLOCS (274) 6
LOC (275) 7
REGVAL (276) 8
END (277) 9
START (278) 10


Simboli nonterminali e regole in cui appaiono

$accept (24)
    nel primo membro: 0
program (25)
    nel primo membro: 1 2, nel secondo membro: 0
instructions (26)
    nel primo membro: 3 4, nel secondo membro: 2 4
instruction (27)
    nel primo membro: 5 6 7 8 9 10 11 12 13 14 15, nel secondo membro:
    1 2 3 4 15
ls_instruction (28)
    nel primo membro: 16 17, nel secondo membro: 13
ar_instruction (29)
    nel primo membro: 18 19 20, nel secondo membro: 11
cond_instruction (30)
    nel primo membro: 21 22 23, nel secondo membro: 14
rego_instruction (31)
    nel primo membro: 24 25, nel secondo membro: 12
seq (32)
    nel primo membro: 26 27, nel secondo membro: 6 27
label (33)
    nel primo membro: 28 29, nel secondo membro: 14 15
exp (34)
    nel primo membro: 30 31, nel secondo membro: 11 14


State 0

    0 $accept: . program $end

    ID       shift e prosecuzione allo stato 1
    LOAD     shift e prosecuzione allo stato 2
    STORE    shift e prosecuzione allo stato 3
    ADD      shift e prosecuzione allo stato 4
    SUB      shift e prosecuzione allo stato 5
    MUL      shift e prosecuzione allo stato 6
    EQ       shift e prosecuzione allo stato 7
    GT       shift e prosecuzione allo stato 8
    LT       shift e prosecuzione allo stato 9
    CLEAR    shift e prosecuzione allo stato 10
    INCR     shift e prosecuzione allo stato 11
    MEMLOC   shift e prosecuzione allo stato 12
    MEMLOCS  shift e prosecuzione allo stato 13
    LOC      shift e prosecuzione allo stato 14
    REGVAL   shift e prosecuzione allo stato 15
    END      shift e prosecuzione allo stato 16
    START    shift e prosecuzione allo stato 17

    program           prosecuzione allo stato 18
    instruction       prosecuzione allo stato 19
    ls_instruction    prosecuzione allo stato 20
    ar_instruction    prosecuzione allo stato 21
    cond_instruction  prosecuzione allo stato 22
    rego_instruction  prosecuzione allo stato 23
    label             prosecuzione allo stato 24


State 1

   28 label: ID . SEMICOLON
   29      | ID .

    SEMICOLON  shift e prosecuzione allo stato 25

    $default  riduzione con la regola 29 (label)


State 2

   16 ls_instruction: LOAD .

    $default  riduzione con la regola 16 (ls_instruction)


State 3

   17 ls_instruction: STORE .

    $default  riduzione con la regola 17 (ls_instruction)


State 4

   18 ar_instruction: ADD .

    $default  riduzione con la regola 18 (ar_instruction)


State 5

   19 ar_instruction: SUB .

    $default  riduzione con la regola 19 (ar_instruction)


State 6

   20 ar_instruction: MUL .

    $default  riduzione con la regola 20 (ar_instruction)


State 7

   21 cond_instruction: EQ .

    $default  riduzione con la regola 21 (cond_instruction)


State 8

   23 cond_instruction: GT .

    $default  riduzione con la regola 23 (cond_instruction)


State 9

   22 cond_instruction: LT .

    $default  riduzione con la regola 22 (cond_instruction)


State 10

   24 rego_instruction: CLEAR .

    $default  riduzione con la regola 24 (rego_instruction)


State 11

   25 rego_instruction: INCR .

    $default  riduzione con la regola 25 (rego_instruction)


State 12

    5 instruction: MEMLOC . VALUE VALUE

    VALUE  shift e prosecuzione allo stato 26


State 13

    6 instruction: MEMLOCS . VALUE seq

    VALUE  shift e prosecuzione allo stato 27


State 14

    7 instruction: LOC . VALUE

    VALUE  shift e prosecuzione allo stato 28


State 15

    8 instruction: REGVAL . VALUE VALUE

    VALUE  shift e prosecuzione allo stato 29


State 16

    9 instruction: END .

    $default  riduzione con la regola 9 (instruction)


State 17

   10 instruction: START . VALUE

    VALUE  shift e prosecuzione allo stato 30


State 18

    0 $accept: program . $end

    $end  shift e prosecuzione allo stato 31


State 19

    1 program: instruction .
    2        | instruction . instructions

    ID       shift e prosecuzione allo stato 1
    LOAD     shift e prosecuzione allo stato 2
    STORE    shift e prosecuzione allo stato 3
    ADD      shift e prosecuzione allo stato 4
    SUB      shift e prosecuzione allo stato 5
    MUL      shift e prosecuzione allo stato 6
    EQ       shift e prosecuzione allo stato 7
    GT       shift e prosecuzione allo stato 8
    LT       shift e prosecuzione allo stato 9
    CLEAR    shift e prosecuzione allo stato 10
    INCR     shift e prosecuzione allo stato 11
    MEMLOC   shift e prosecuzione allo stato 12
    MEMLOCS  shift e prosecuzione allo stato 13
    LOC      shift e prosecuzione allo stato 14
    REGVAL   shift e prosecuzione allo stato 15
    END      shift e prosecuzione allo stato 16
    START    shift e prosecuzione allo stato 17

    $default  riduzione con la regola 1 (program)

    instructions      prosecuzione allo stato 32
    instruction       prosecuzione allo stato 33
    ls_instruction    prosecuzione allo stato 20
    ar_instruction    prosecuzione allo stato 21
    cond_instruction  prosecuzione allo stato 22
    rego_instruction  prosecuzione allo stato 23
    label             prosecuzione allo stato 24


State 20

   13 instruction: ls_instruction . REG COMMA REG COMMA REG

    REG  shift e prosecuzione allo stato 34


State 21

   11 instruction: ar_instruction . exp COMMA exp COMMA REG

    VALUE  shift e prosecuzione allo stato 35
    REG    shift e prosecuzione allo stato 36

    exp  prosecuzione allo stato 37


State 22

   14 instruction: cond_instruction . exp COMMA exp COMMA label

    VALUE  shift e prosecuzione allo stato 35
    REG    shift e prosecuzione allo stato 36

    exp  prosecuzione allo stato 38


State 23

   12 instruction: rego_instruction . REG

    REG  shift e prosecuzione allo stato 39


State 24

   15 instruction: label . instruction

    ID       shift e prosecuzione allo stato 1
    LOAD     shift e prosecuzione allo stato 2
    STORE    shift e prosecuzione allo stato 3
    ADD      shift e prosecuzione allo stato 4
    SUB      shift e prosecuzione allo stato 5
    MUL      shift e prosecuzione allo stato 6
    EQ       shift e prosecuzione allo stato 7
    GT       shift e prosecuzione allo stato 8
    LT       shift e prosecuzione allo stato 9
    CLEAR    shift e prosecuzione allo stato 10
    INCR     shift e prosecuzione allo stato 11
    MEMLOC   shift e prosecuzione allo stato 12
    MEMLOCS  shift e prosecuzione allo stato 13
    LOC      shift e prosecuzione allo stato 14
    REGVAL   shift e prosecuzione allo stato 15
    END      shift e prosecuzione allo stato 16
    START    shift e prosecuzione allo stato 17

    instruction       prosecuzione allo stato 40
    ls_instruction    prosecuzione allo stato 20
    ar_instruction    prosecuzione allo stato 21
    cond_instruction  prosecuzione allo stato 22
    rego_instruction  prosecuzione allo stato 23
    label             prosecuzione allo stato 24


State 25

   28 label: ID SEMICOLON .

    $default  riduzione con la regola 28 (label)


State 26

    5 instruction: MEMLOC VALUE . VALUE

    VALUE  shift e prosecuzione allo stato 41


State 27

    6 instruction: MEMLOCS VALUE . seq

    VALUE  shift e prosecuzione allo stato 42

    seq  prosecuzione allo stato 43


State 28

    7 instruction: LOC VALUE .

    $default  riduzione con la regola 7 (instruction)


State 29

    8 instruction: REGVAL VALUE . VALUE

    VALUE  shift e prosecuzione allo stato 44


State 30

   10 instruction: START VALUE .

    $default  riduzione con la regola 10 (instruction)


State 31

    0 $accept: program $end .

    $default  accetta


State 32

    2 program: instruction instructions .

    $default  riduzione con la regola 2 (program)


State 33

    3 instructions: instruction .
    4             | instruction . instructions

    ID       shift e prosecuzione allo stato 1
    LOAD     shift e prosecuzione allo stato 2
    STORE    shift e prosecuzione allo stato 3
    ADD      shift e prosecuzione allo stato 4
    SUB      shift e prosecuzione allo stato 5
    MUL      shift e prosecuzione allo stato 6
    EQ       shift e prosecuzione allo stato 7
    GT       shift e prosecuzione allo stato 8
    LT       shift e prosecuzione allo stato 9
    CLEAR    shift e prosecuzione allo stato 10
    INCR     shift e prosecuzione allo stato 11
    MEMLOC   shift e prosecuzione allo stato 12
    MEMLOCS  shift e prosecuzione allo stato 13
    LOC      shift e prosecuzione allo stato 14
    REGVAL   shift e prosecuzione allo stato 15
    END      shift e prosecuzione allo stato 16
    START    shift e prosecuzione allo stato 17

    $default  riduzione con la regola 3 (instructions)

    instructions      prosecuzione allo stato 45
    instruction       prosecuzione allo stato 33
    ls_instruction    prosecuzione allo stato 20
    ar_instruction    prosecuzione allo stato 21
    cond_instruction  prosecuzione allo stato 22
    rego_instruction  prosecuzione allo stato 23
    label             prosecuzione allo stato 24


State 34

   13 instruction: ls_instruction REG . COMMA REG COMMA REG

    COMMA  shift e prosecuzione allo stato 46


State 35

   31 exp: VALUE .

    $default  riduzione con la regola 31 (exp)


State 36

   30 exp: REG .

    $default  riduzione con la regola 30 (exp)


State 37

   11 instruction: ar_instruction exp . COMMA exp COMMA REG

    COMMA  shift e prosecuzione allo stato 47


State 38

   14 instruction: cond_instruction exp . COMMA exp COMMA label

    COMMA  shift e prosecuzione allo stato 48


State 39

   12 instruction: rego_instruction REG .

    $default  riduzione con la regola 12 (instruction)


State 40

   15 instruction: label instruction .

    $default  riduzione con la regola 15 (instruction)


State 41

    5 instruction: MEMLOC VALUE VALUE .

    $default  riduzione con la regola 5 (instruction)


State 42

   26 seq: VALUE .
   27    | VALUE . seq

    VALUE  shift e prosecuzione allo stato 42

    $default  riduzione con la regola 26 (seq)

    seq  prosecuzione allo stato 49


State 43

    6 instruction: MEMLOCS VALUE seq .

    $default  riduzione con la regola 6 (instruction)


State 44

    8 instruction: REGVAL VALUE VALUE .

    $default  riduzione con la regola 8 (instruction)


State 45

    4 instructions: instruction instructions .

    $default  riduzione con la regola 4 (instructions)


State 46

   13 instruction: ls_instruction REG COMMA . REG COMMA REG

    REG  shift e prosecuzione allo stato 50


State 47

   11 instruction: ar_instruction exp COMMA . exp COMMA REG

    VALUE  shift e prosecuzione allo stato 35
    REG    shift e prosecuzione allo stato 36

    exp  prosecuzione allo stato 51


State 48

   14 instruction: cond_instruction exp COMMA . exp COMMA label

    VALUE  shift e prosecuzione allo stato 35
    REG    shift e prosecuzione allo stato 36

    exp  prosecuzione allo stato 52


State 49

   27 seq: VALUE seq .

    $default  riduzione con la regola 27 (seq)


State 50

   13 instruction: ls_instruction REG COMMA REG . COMMA REG

    COMMA  shift e prosecuzione allo stato 53


State 51

   11 instruction: ar_instruction exp COMMA exp . COMMA REG

    COMMA  shift e prosecuzione allo stato 54


State 52

   14 instruction: cond_instruction exp COMMA exp . COMMA label

    COMMA  shift e prosecuzione allo stato 55


State 53

   13 instruction: ls_instruction REG COMMA REG COMMA . REG

    REG  shift e prosecuzione allo stato 56


State 54

   11 instruction: ar_instruction exp COMMA exp COMMA . REG

    REG  shift e prosecuzione allo stato 57


State 55

   14 instruction: cond_instruction exp COMMA exp COMMA . label

    ID  shift e prosecuzione allo stato 1

    label  prosecuzione allo stato 58


State 56

   13 instruction: ls_instruction REG COMMA REG COMMA REG .

    $default  riduzione con la regola 13 (instruction)


State 57

   11 instruction: ar_instruction exp COMMA exp COMMA REG .

    $default  riduzione con la regola 11 (instruction)


State 58

   14 instruction: cond_instruction exp COMMA exp COMMA label .

    $default  riduzione con la regola 14 (instruction)
