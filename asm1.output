Grammatica

    0 $accept: program $end

    1 program: instruction
    2        | instruction program

    3 instruction: MEMLOC VALUE VALUE
    4            | MEMLOCS VALUE seq
    5            | LOC VALUE
    6            | REGVAL VALUE VALUE
    7            | END
    8            | START VALUE
    9            | ar_instruction exp COMMA exp COMMA REG
   10            | rego_instruction REG
   11            | ls_instruction REG COMMA REG COMMA REG
   12            | cond_instruction exp COMMA exp COMMA label
   13            | label instruction

   14 ls_instruction: LOAD
   15               | STORE

   16 ar_instruction: ADD
   17               | SUB
   18               | MUL

   19 cond_instruction: EQ
   20                 | LT
   21                 | GT

   22 rego_instruction: CLEAR
   23                 | INCR

   24 seq: VALUE
   25    | VALUE seq

   26 label: ID SEMICOLON
   27      | ID

   28 exp: REG
   29    | VALUE


Simboli terminali e regole in cui appaiono

$end (0) 0
error (256)
VALUE (258) 3 4 5 6 8 24 25 29
SEMICOLON (259) 26
COMMA (260) 9 11 12
REG (261) 9 10 11 28
ID (262) 26 27
LOAD (263) 14
STORE (264) 15
ADD (265) 16
SUB (266) 17
MUL (267) 18
EQ (268) 19
GT (269) 21
LT (270) 20
CLEAR (271) 22
INCR (272) 23
MEMLOC (273) 3
MEMLOCS (274) 4
LOC (275) 5
REGVAL (276) 6
END (277) 7
START (278) 8


Simboli nonterminali e regole in cui appaiono

$accept (24)
    nel primo membro: 0
program (25)
    nel primo membro: 1 2, nel secondo membro: 0 2
instruction (26)
    nel primo membro: 3 4 5 6 7 8 9 10 11 12 13, nel secondo membro:
    1 2 13
ls_instruction (27)
    nel primo membro: 14 15, nel secondo membro: 11
ar_instruction (28)
    nel primo membro: 16 17 18, nel secondo membro: 9
cond_instruction (29)
    nel primo membro: 19 20 21, nel secondo membro: 12
rego_instruction (30)
    nel primo membro: 22 23, nel secondo membro: 10
seq (31)
    nel primo membro: 24 25, nel secondo membro: 4 25
label (32)
    nel primo membro: 26 27, nel secondo membro: 12 13
exp (33)
    nel primo membro: 28 29, nel secondo membro: 9 12


State 0

    0 $accept: . program $end

    ID       shift e prosecuzione allo stato 1
    LOAD     shift e prosecuzione allo stato 2
    STORE    shift e prosecuzione allo stato 3
    ADD      shift e prosecuzione allo stato 4
    SUB      shift e prosecuzione allo stato 5
    MUL      shift e prosecuzione allo stato 6
    EQ       shift e prosecuzione allo stato 7
    GT       shift e prosecuzione allo stato 8
    LT       shift e prosecuzione allo stato 9
    CLEAR    shift e prosecuzione allo stato 10
    INCR     shift e prosecuzione allo stato 11
    MEMLOC   shift e prosecuzione allo stato 12
    MEMLOCS  shift e prosecuzione allo stato 13
    LOC      shift e prosecuzione allo stato 14
    REGVAL   shift e prosecuzione allo stato 15
    END      shift e prosecuzione allo stato 16
    START    shift e prosecuzione allo stato 17

    program           prosecuzione allo stato 18
    instruction       prosecuzione allo stato 19
    ls_instruction    prosecuzione allo stato 20
    ar_instruction    prosecuzione allo stato 21
    cond_instruction  prosecuzione allo stato 22
    rego_instruction  prosecuzione allo stato 23
    label             prosecuzione allo stato 24


State 1

   26 label: ID . SEMICOLON
   27      | ID .

    SEMICOLON  shift e prosecuzione allo stato 25

    $default  riduzione con la regola 27 (label)


State 2

   14 ls_instruction: LOAD .

    $default  riduzione con la regola 14 (ls_instruction)


State 3

   15 ls_instruction: STORE .

    $default  riduzione con la regola 15 (ls_instruction)


State 4

   16 ar_instruction: ADD .

    $default  riduzione con la regola 16 (ar_instruction)


State 5

   17 ar_instruction: SUB .

    $default  riduzione con la regola 17 (ar_instruction)


State 6

   18 ar_instruction: MUL .

    $default  riduzione con la regola 18 (ar_instruction)


State 7

   19 cond_instruction: EQ .

    $default  riduzione con la regola 19 (cond_instruction)


State 8

   21 cond_instruction: GT .

    $default  riduzione con la regola 21 (cond_instruction)


State 9

   20 cond_instruction: LT .

    $default  riduzione con la regola 20 (cond_instruction)


State 10

   22 rego_instruction: CLEAR .

    $default  riduzione con la regola 22 (rego_instruction)


State 11

   23 rego_instruction: INCR .

    $default  riduzione con la regola 23 (rego_instruction)


State 12

    3 instruction: MEMLOC . VALUE VALUE

    VALUE  shift e prosecuzione allo stato 26


State 13

    4 instruction: MEMLOCS . VALUE seq

    VALUE  shift e prosecuzione allo stato 27


State 14

    5 instruction: LOC . VALUE

    VALUE  shift e prosecuzione allo stato 28


State 15

    6 instruction: REGVAL . VALUE VALUE

    VALUE  shift e prosecuzione allo stato 29


State 16

    7 instruction: END .

    $default  riduzione con la regola 7 (instruction)


State 17

    8 instruction: START . VALUE

    VALUE  shift e prosecuzione allo stato 30


State 18

    0 $accept: program . $end

    $end  shift e prosecuzione allo stato 31


State 19

    1 program: instruction .
    2        | instruction . program

    ID       shift e prosecuzione allo stato 1
    LOAD     shift e prosecuzione allo stato 2
    STORE    shift e prosecuzione allo stato 3
    ADD      shift e prosecuzione allo stato 4
    SUB      shift e prosecuzione allo stato 5
    MUL      shift e prosecuzione allo stato 6
    EQ       shift e prosecuzione allo stato 7
    GT       shift e prosecuzione allo stato 8
    LT       shift e prosecuzione allo stato 9
    CLEAR    shift e prosecuzione allo stato 10
    INCR     shift e prosecuzione allo stato 11
    MEMLOC   shift e prosecuzione allo stato 12
    MEMLOCS  shift e prosecuzione allo stato 13
    LOC      shift e prosecuzione allo stato 14
    REGVAL   shift e prosecuzione allo stato 15
    END      shift e prosecuzione allo stato 16
    START    shift e prosecuzione allo stato 17

    $default  riduzione con la regola 1 (program)

    program           prosecuzione allo stato 32
    instruction       prosecuzione allo stato 19
    ls_instruction    prosecuzione allo stato 20
    ar_instruction    prosecuzione allo stato 21
    cond_instruction  prosecuzione allo stato 22
    rego_instruction  prosecuzione allo stato 23
    label             prosecuzione allo stato 24


State 20

   11 instruction: ls_instruction . REG COMMA REG COMMA REG

    REG  shift e prosecuzione allo stato 33


State 21

    9 instruction: ar_instruction . exp COMMA exp COMMA REG

    VALUE  shift e prosecuzione allo stato 34
    REG    shift e prosecuzione allo stato 35

    exp  prosecuzione allo stato 36


State 22

   12 instruction: cond_instruction . exp COMMA exp COMMA label

    VALUE  shift e prosecuzione allo stato 34
    REG    shift e prosecuzione allo stato 35

    exp  prosecuzione allo stato 37


State 23

   10 instruction: rego_instruction . REG

    REG  shift e prosecuzione allo stato 38


State 24

   13 instruction: label . instruction

    ID       shift e prosecuzione allo stato 1
    LOAD     shift e prosecuzione allo stato 2
    STORE    shift e prosecuzione allo stato 3
    ADD      shift e prosecuzione allo stato 4
    SUB      shift e prosecuzione allo stato 5
    MUL      shift e prosecuzione allo stato 6
    EQ       shift e prosecuzione allo stato 7
    GT       shift e prosecuzione allo stato 8
    LT       shift e prosecuzione allo stato 9
    CLEAR    shift e prosecuzione allo stato 10
    INCR     shift e prosecuzione allo stato 11
    MEMLOC   shift e prosecuzione allo stato 12
    MEMLOCS  shift e prosecuzione allo stato 13
    LOC      shift e prosecuzione allo stato 14
    REGVAL   shift e prosecuzione allo stato 15
    END      shift e prosecuzione allo stato 16
    START    shift e prosecuzione allo stato 17

    instruction       prosecuzione allo stato 39
    ls_instruction    prosecuzione allo stato 20
    ar_instruction    prosecuzione allo stato 21
    cond_instruction  prosecuzione allo stato 22
    rego_instruction  prosecuzione allo stato 23
    label             prosecuzione allo stato 24


State 25

   26 label: ID SEMICOLON .

    $default  riduzione con la regola 26 (label)


State 26

    3 instruction: MEMLOC VALUE . VALUE

    VALUE  shift e prosecuzione allo stato 40


State 27

    4 instruction: MEMLOCS VALUE . seq

    VALUE  shift e prosecuzione allo stato 41

    seq  prosecuzione allo stato 42


State 28

    5 instruction: LOC VALUE .

    $default  riduzione con la regola 5 (instruction)


State 29

    6 instruction: REGVAL VALUE . VALUE

    VALUE  shift e prosecuzione allo stato 43


State 30

    8 instruction: START VALUE .

    $default  riduzione con la regola 8 (instruction)


State 31

    0 $accept: program $end .

    $default  accetta


State 32

    2 program: instruction program .

    $default  riduzione con la regola 2 (program)


State 33

   11 instruction: ls_instruction REG . COMMA REG COMMA REG

    COMMA  shift e prosecuzione allo stato 44


State 34

   29 exp: VALUE .

    $default  riduzione con la regola 29 (exp)


State 35

   28 exp: REG .

    $default  riduzione con la regola 28 (exp)


State 36

    9 instruction: ar_instruction exp . COMMA exp COMMA REG

    COMMA  shift e prosecuzione allo stato 45


State 37

   12 instruction: cond_instruction exp . COMMA exp COMMA label

    COMMA  shift e prosecuzione allo stato 46


State 38

   10 instruction: rego_instruction REG .

    $default  riduzione con la regola 10 (instruction)


State 39

   13 instruction: label instruction .

    $default  riduzione con la regola 13 (instruction)


State 40

    3 instruction: MEMLOC VALUE VALUE .

    $default  riduzione con la regola 3 (instruction)


State 41

   24 seq: VALUE .
   25    | VALUE . seq

    VALUE  shift e prosecuzione allo stato 41

    $default  riduzione con la regola 24 (seq)

    seq  prosecuzione allo stato 47


State 42

    4 instruction: MEMLOCS VALUE seq .

    $default  riduzione con la regola 4 (instruction)


State 43

    6 instruction: REGVAL VALUE VALUE .

    $default  riduzione con la regola 6 (instruction)


State 44

   11 instruction: ls_instruction REG COMMA . REG COMMA REG

    REG  shift e prosecuzione allo stato 48


State 45

    9 instruction: ar_instruction exp COMMA . exp COMMA REG

    VALUE  shift e prosecuzione allo stato 34
    REG    shift e prosecuzione allo stato 35

    exp  prosecuzione allo stato 49


State 46

   12 instruction: cond_instruction exp COMMA . exp COMMA label

    VALUE  shift e prosecuzione allo stato 34
    REG    shift e prosecuzione allo stato 35

    exp  prosecuzione allo stato 50


State 47

   25 seq: VALUE seq .

    $default  riduzione con la regola 25 (seq)


State 48

   11 instruction: ls_instruction REG COMMA REG . COMMA REG

    COMMA  shift e prosecuzione allo stato 51


State 49

    9 instruction: ar_instruction exp COMMA exp . COMMA REG

    COMMA  shift e prosecuzione allo stato 52


State 50

   12 instruction: cond_instruction exp COMMA exp . COMMA label

    COMMA  shift e prosecuzione allo stato 53


State 51

   11 instruction: ls_instruction REG COMMA REG COMMA . REG

    REG  shift e prosecuzione allo stato 54


State 52

    9 instruction: ar_instruction exp COMMA exp COMMA . REG

    REG  shift e prosecuzione allo stato 55


State 53

   12 instruction: cond_instruction exp COMMA exp COMMA . label

    ID  shift e prosecuzione allo stato 1

    label  prosecuzione allo stato 56


State 54

   11 instruction: ls_instruction REG COMMA REG COMMA REG .

    $default  riduzione con la regola 11 (instruction)


State 55

    9 instruction: ar_instruction exp COMMA exp COMMA REG .

    $default  riduzione con la regola 9 (instruction)


State 56

   12 instruction: cond_instruction exp COMMA exp COMMA label .

    $default  riduzione con la regola 12 (instruction)
